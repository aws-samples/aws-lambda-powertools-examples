AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sqs batch processing demo

Globals:
  Function:
    Timeout: 20
    Runtime: java11
    MemorySize: 512
    Tracing: Active
    Environment:
      Variables:
        # Powertools env vars: https://awslabs.github.io/aws-lambda-powertools-python/#environment-variables
        POWERTOOLS_LOG_LEVEL: INFO
        POWERTOOLS_LOGGER_SAMPLE_RATE: 0.1
        POWERTOOLS_LOGGER_LOG_EVENT: true

Resources:
  DemoDlqSqsQueue:
    Type: AWS::SQS::Queue

  DemoSqsQueue:
    Type: AWS::SQS::Queue
    Properties:
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
            - "DemoDlqSqsQueue"
            - "Arn"
        maxReceiveCount: 2

  DemoSQSSenderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: Functions
      Handler: org.demo.sqs.SqsMessageSender::handleRequest
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: sqs-demo
          QUEUE_URL: !Ref DemoSqsQueue
      Policies:
        - Statement:
          - Sid: SQSSendMessageBatch
            Effect: Allow
            Action:
              - sqs:SendMessageBatch
              - sqs:SendMessage
            Resource: !GetAtt DemoSqsQueue.Arn
      Events:
        CWSchedule:
          Type: Schedule
          Properties:
            Schedule: 'rate(5 minutes)'
            Name: DemoMessageProducer
            Description: Produce message to SQS via a Lambda function
            Enabled: true

  DemoSQSConsumerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: Functions
      Handler: org.demo.sqs.SqsPoller::handleRequest
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: sqs-demo
      Policies:
        - Statement:
            - Sid: SQSDeleteGetAttribute
              Effect: Allow
              Action:
                - sqs:DeleteMessageBatch
                - sqs:GetQueueAttributes
              Resource: !GetAtt DemoSqsQueue.Arn
            - Sid: SQSSendMessageBatch
              Effect: Allow
              Action:
                - sqs:SendMessageBatch
                - sqs:SendMessage
              Resource: !GetAtt DemoDlqSqsQueue.Arn
      Events:
        MySQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt DemoSqsQueue.Arn
            BatchSize: 2
            MaximumBatchingWindowInSeconds: 300

Outputs:
  DemoSqsQueue:
    Description: "ARN for main SQS queue"
    Value: !GetAtt DemoSqsQueue.Arn
  DemoDlqSqsQueue:
    Description: "ARN for DLQ"
    Value: !GetAtt DemoDlqSqsQueue.Arn
  DemoSQSSenderFunction:
    Description: "Sender SQS Lambda Function ARN"
    Value: !GetAtt DemoSQSSenderFunction.Arn
  DemoSQSConsumerFunction:
    Description: "Consumer SQS Lambda Function ARN"
    Value: !GetAtt DemoSQSConsumerFunction.Arn
  DemoSQSConsumerFunctionRole:
    Description: "Implicit IAM Role created for SQS Lambda Function ARN"
    Value: !GetAtt DemoSQSConsumerFunctionRole.Arn
